{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","map","setMap","mapElement","useRef","current","projection","Projection","code","units","useEffect","newMap","Map","target","layers","ImageLayer","source","ImageWMS","url","params","LAYERS","VERSION","view","View","center","zoom","ref","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QA+CeA,MAvCf,WACE,MAAsBC,qBAAtB,mBAAOC,EAAP,KAAYC,EAAZ,KAEMC,EAAaC,mBACnBD,EAAWE,QAAUJ,EAErB,IAAMK,EAAa,IAAIC,IAAW,CAChCC,KAAM,YACNC,MAAO,MA4BT,OAzBAC,qBAAU,WACR,IAAKT,EAAK,CACR,IAAMU,EAAS,IAAIC,IAAI,CACrBC,OAAQ,MACRC,OAAQ,CACN,IAAIC,IAAW,CACbC,OAAQ,IAAIC,IAAS,CACnBC,IAAK,oCACLC,OAAQ,CACNC,OAAQ,UACRC,QAAS,cAKjBC,KAAM,IAAIC,IAAK,CACbC,OAAQ,CAAC,KAAQ,OACjBlB,aACAmB,KAAM,OAGVvB,EAAOS,MAER,CAACV,EAAKC,EAAQI,IAEV,qBAAKoB,IAAKvB,EAAYwB,GAAG,SChCnBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f1483d2.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"ol/ol.css\";\nimport \"./App.css\";\nimport { Map, View } from \"ol\";\nimport Projection from 'ol/proj/Projection';\nimport ImageWMS from \"ol/source/ImageWMS\";\nimport { Image as ImageLayer } from \"ol/layer\";\n\nfunction App() {\n  const [map, setMap] = useState();\n\n  const mapElement = useRef();\n  mapElement.current = map;\n  \n  const projection = new Projection({\n    code: 'EPSG:3301',\n    units: 'm'\n  });\n  \n  useEffect(() => {\n    if (!map) {\n      const newMap = new Map({\n        target: \"map\",\n        layers: [\n          new ImageLayer({\n            source: new ImageWMS({\n              url: \"http://kaart.maaamet.ee/wms/alus?\",\n              params: {\n                LAYERS: \"MA-ALUS\",\n                VERSION: \"1.1.1\",\n              },\n            }),\n          }),\n        ],\n        view: new View({\n          center: [550000, 6520000],\n          projection,\n          zoom: 10,\n        }),\n      });\n      setMap(newMap);\n    }\n  }, [map, setMap, projection]);\n\n  return <div ref={mapElement} id=\"map\"></div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}